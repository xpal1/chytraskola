/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN RodiciaActionsGenerated.js PLEASE EDIT ../RodiciaActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import RodiciaApi from "../../../api/RodiciaApi";

let actionsFunction = {

  //CRUD METHODS

  // Create rodicia
  createRodicia: function(rodicia) {
    return function(dispatch) {
      return RodiciaApi
        .createRodicia(rodicia)
        .then(rodicia => {
          dispatch(actionsFunction.createRodiciaSuccess(rodicia));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createRodiciaSuccess: function(rodicia) {
    return { type: types.CREATE_RODICIA_SUCCESS, payload: rodicia };
  },


  // Delete rodicia
  deleteRodicia: function(id) {
    return function(dispatch) {
      return RodiciaApi
        .deleteRodicia(id)
        .then(rodicia => {
          dispatch(actionsFunction.deleteRodiciaSuccess(rodicia));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteRodiciaSuccess: function(rodicia) {
    return { type: types.DELETE_RODICIA_SUCCESS, payload: rodicia };
  },


  // Find by _student
  findBy_student: function(key) {
    return function(dispatch) {
      return RodiciaApi
        .findBy_student(key)
        .then(item => {
          dispatch(actionsFunction.findBy_studentSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_studentSuccess: function(item) {
    return { type: types.FINDBY_STUDENT_RODICIA_SUCCESS, payload: item };
  },


  // Get rodicia
  loadRodicia: function(id) {
    return function(dispatch) {
      return RodiciaApi
        .getOneRodicia(id)
        .then(rodicia => {
          dispatch(actionsFunction.loadRodiciaSuccess(rodicia));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadRodiciaSuccess: function(rodicia) {
    return { type: types.GET_RODICIA_SUCCESS, payload: rodicia };
  },

  // Load  list
  loadRodiciaList: function() {
    return function(dispatch) {
      return RodiciaApi
        .getRodiciaList()
        .then(list => {
          dispatch(actionsFunction.loadRodiciaListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadRodiciaListSuccess: function(list) {
    return { type: types.LIST_RODICIA_SUCCESS, payload: list };
  },

	
  // Save rodicia
  saveRodicia: function(rodicia) {
    return function(dispatch) {
      return RodiciaApi
        .saveRodicia(rodicia)
        .then(rodicia => {
          dispatch(actionsFunction.saveRodiciaSuccess(rodicia));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveRodiciaSuccess: function(rodicia) {
    return { type: types.UPDATE_RODICIA_SUCCESS, payload: rodicia };
  },


};

export default actionsFunction;
