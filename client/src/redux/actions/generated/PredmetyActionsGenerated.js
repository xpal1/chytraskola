/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN PredmetyActionsGenerated.js PLEASE EDIT ../PredmetyActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import PredmetyApi from "../../../api/PredmetyApi";

let actionsFunction = {

  //CRUD METHODS

  // Find by _triedy
  findBy_triedy: function(key) {
    return function(dispatch) {
      return PredmetyApi
        .findBy_triedy(key)
        .then(item => {
          dispatch(actionsFunction.findBy_triedySuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_triedySuccess: function(item) {
    return { type: types.FINDBY_TRIEDY_PREDMETY_SUCCESS, payload: item };
  },


  // Find by _ucitel
  findBy_ucitel: function(key) {
    return function(dispatch) {
      return PredmetyApi
        .findBy_ucitel(key)
        .then(item => {
          dispatch(actionsFunction.findBy_ucitelSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_ucitelSuccess: function(item) {
    return { type: types.FINDBY_UCITEL_PREDMETY_SUCCESS, payload: item };
  },

  // Load  list
  loadPredmetyList: function() {
    return function(dispatch) {
      return PredmetyApi
        .getPredmetyList()
        .then(list => {
          dispatch(actionsFunction.loadPredmetyListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadPredmetyListSuccess: function(list) {
    return { type: types.LIST_PREDMETY_SUCCESS, payload: list };
  },


};

export default actionsFunction;
