/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN OdboryActionsGenerated.js PLEASE EDIT ../OdboryActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import OdboryApi from "../../../api/OdboryApi";

let actionsFunction = {

  //CRUD METHODS

  // Create odbory
  createOdbory: function(odbory) {
    return function(dispatch) {
      return OdboryApi
        .createOdbory(odbory)
        .then(odbory => {
          dispatch(actionsFunction.createOdborySuccess(odbory));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createOdborySuccess: function(odbory) {
    return { type: types.CREATE_ODBORY_SUCCESS, payload: odbory };
  },


  // Delete odbory
  deleteOdbory: function(id) {
    return function(dispatch) {
      return OdboryApi
        .deleteOdbory(id)
        .then(odbory => {
          dispatch(actionsFunction.deleteOdborySuccess(odbory));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteOdborySuccess: function(odbory) {
    return { type: types.DELETE_ODBORY_SUCCESS, payload: odbory };
  },


  // Get odbory
  loadOdbory: function(id) {
    return function(dispatch) {
      return OdboryApi
        .getOneOdbory(id)
        .then(odbory => {
          dispatch(actionsFunction.loadOdborySuccess(odbory));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadOdborySuccess: function(odbory) {
    return { type: types.GET_ODBORY_SUCCESS, payload: odbory };
  },

  // Load  list
  loadOdboryList: function() {
    return function(dispatch) {
      return OdboryApi
        .getOdboryList()
        .then(list => {
          dispatch(actionsFunction.loadOdboryListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadOdboryListSuccess: function(list) {
    return { type: types.LIST_ODBORY_SUCCESS, payload: list };
  },

	
  // Save odbory
  saveOdbory: function(odbory) {
    return function(dispatch) {
      return OdboryApi
        .saveOdbory(odbory)
        .then(odbory => {
          dispatch(actionsFunction.saveOdborySuccess(odbory));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveOdborySuccess: function(odbory) {
    return { type: types.UPDATE_ODBORY_SUCCESS, payload: odbory };
  },


};

export default actionsFunction;
