/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN ZnamkyActionsGenerated.js PLEASE EDIT ../ZnamkyActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import ZnamkyApi from "../../../api/ZnamkyApi";

let actionsFunction = {

  //CRUD METHODS

  // Create znamky
  createZnamky: function(znamky) {
    return function(dispatch) {
      return ZnamkyApi
        .createZnamky(znamky)
        .then(znamky => {
          dispatch(actionsFunction.createZnamkySuccess(znamky));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createZnamkySuccess: function(znamky) {
    return { type: types.CREATE_ZNAMKY_SUCCESS, payload: znamky };
  },


  // Delete znamky
  deleteZnamky: function(id) {
    return function(dispatch) {
      return ZnamkyApi
        .deleteZnamky(id)
        .then(znamky => {
          dispatch(actionsFunction.deleteZnamkySuccess(znamky));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteZnamkySuccess: function(znamky) {
    return { type: types.DELETE_ZNAMKY_SUCCESS, payload: znamky };
  },


  // Get znamky
  loadZnamky: function(id) {
    return function(dispatch) {
      return ZnamkyApi
        .getOneZnamky(id)
        .then(znamky => {
          dispatch(actionsFunction.loadZnamkySuccess(znamky));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadZnamkySuccess: function(znamky) {
    return { type: types.GET_ZNAMKY_SUCCESS, payload: znamky };
  },

  // Load  list
  loadZnamkyList: function() {
    return function(dispatch) {
      return ZnamkyApi
        .getZnamkyList()
        .then(list => {
          dispatch(actionsFunction.loadZnamkyListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadZnamkyListSuccess: function(list) {
    return { type: types.LIST_ZNAMKY_SUCCESS, payload: list };
  },

	
  // Save znamky
  saveZnamky: function(znamky) {
    return function(dispatch) {
      return ZnamkyApi
        .saveZnamky(znamky)
        .then(znamky => {
          dispatch(actionsFunction.saveZnamkySuccess(znamky));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveZnamkySuccess: function(znamky) {
    return { type: types.UPDATE_ZNAMKY_SUCCESS, payload: znamky };
  },


};

export default actionsFunction;
