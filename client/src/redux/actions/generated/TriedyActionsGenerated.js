/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN TriedyActionsGenerated.js PLEASE EDIT ../TriedyActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import TriedyApi from "../../../api/TriedyApi";

let actionsFunction = {

  //CRUD METHODS

  // Create triedy
  createTriedy: function(triedy) {
    return function(dispatch) {
      return TriedyApi
        .createTriedy(triedy)
        .then(triedy => {
          dispatch(actionsFunction.createTriedySuccess(triedy));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createTriedySuccess: function(triedy) {
    return { type: types.CREATE_TRIEDY_SUCCESS, payload: triedy };
  },


  // Delete triedy
  deleteTriedy: function(id) {
    return function(dispatch) {
      return TriedyApi
        .deleteTriedy(id)
        .then(triedy => {
          dispatch(actionsFunction.deleteTriedySuccess(triedy));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteTriedySuccess: function(triedy) {
    return { type: types.DELETE_TRIEDY_SUCCESS, payload: triedy };
  },


  // Find by _odbory
  findBy_odbory: function(key) {
    return function(dispatch) {
      return TriedyApi
        .findBy_odbory(key)
        .then(item => {
          dispatch(actionsFunction.findBy_odborySuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_odborySuccess: function(item) {
    return { type: types.FINDBY_ODBORY_TRIEDY_SUCCESS, payload: item };
  },


  // Find by _skupina
  findBy_skupina: function(key) {
    return function(dispatch) {
      return TriedyApi
        .findBy_skupina(key)
        .then(item => {
          dispatch(actionsFunction.findBy_skupinaSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_skupinaSuccess: function(item) {
    return { type: types.FINDBY_SKUPINA_TRIEDY_SUCCESS, payload: item };
  },


  // Find by _ucitel
  findBy_ucitel: function(key) {
    return function(dispatch) {
      return TriedyApi
        .findBy_ucitel(key)
        .then(item => {
          dispatch(actionsFunction.findBy_ucitelSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_ucitelSuccess: function(item) {
    return { type: types.FINDBY_UCITEL_TRIEDY_SUCCESS, payload: item };
  },


  // Get triedy
  loadTriedy: function(id) {
    return function(dispatch) {
      return TriedyApi
        .getOneTriedy(id)
        .then(triedy => {
          dispatch(actionsFunction.loadTriedySuccess(triedy));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadTriedySuccess: function(triedy) {
    return { type: types.GET_TRIEDY_SUCCESS, payload: triedy };
  },

  // Load  list
  loadTriedyList: function() {
    return function(dispatch) {
      return TriedyApi
        .getTriedyList()
        .then(list => {
          dispatch(actionsFunction.loadTriedyListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadTriedyListSuccess: function(list) {
    return { type: types.LIST_TRIEDY_SUCCESS, payload: list };
  },

	
  // Save triedy
  saveTriedy: function(triedy) {
    return function(dispatch) {
      return TriedyApi
        .saveTriedy(triedy)
        .then(triedy => {
          dispatch(actionsFunction.saveTriedySuccess(triedy));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveTriedySuccess: function(triedy) {
    return { type: types.UPDATE_TRIEDY_SUCCESS, payload: triedy };
  },


};

export default actionsFunction;
