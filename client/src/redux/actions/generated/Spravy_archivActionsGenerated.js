/**
 *
 *
  _____                      _              _ _ _     _   _     _        __ _ _
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|

 * DO NOT EDIT THIS FILE!!
 *
 *  TO CUSTOMIZE FUNCTIONS IN Spravy_archivActionsGenerated.js PLEASE EDIT ../Spravy_archivActions.js
 *
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 *
 */

import * as types from "../../actionTypes";
import Spravy_archivApi from "../../../api/Spravy_archivApi";

let actionsFunction = {

  //CRUD METHODS

  // Create spravy_archiv
  createSpravy_archiv: function(spravy_archiv) {
    return function(dispatch) {
      return Spravy_archivApi
        .createSpravy_archiv(spravy_archiv)
        .then(spravy_archiv => {
          dispatch(actionsFunction.createSpravy_archivSuccess(spravy_archiv));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  createSpravy_archivSuccess: function(spravy_archiv) {
    return { type: types.CREATE_SPRAVY_ARCHIV_SUCCESS, payload: spravy_archiv };
  },


  // Delete spravy_archiv
  deleteSpravy_archiv: function(id) {
    return function(dispatch) {
      return Spravy_archivApi
        .deleteSpravy_archiv(id)
        .then(spravy_archiv => {
          dispatch(actionsFunction.deleteSpravy_archivSuccess(spravy_archiv));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  deleteSpravy_archivSuccess: function(spravy_archiv) {
    return { type: types.DELETE_SPRAVY_ARCHIV_SUCCESS, payload: spravy_archiv };
  },


  // Find by _spravy_skupina
  findBy_spravy_skupina: function(key) {
    return function(dispatch) {
      return Spravy_archivApi
        .findBy_spravy_skupina(key)
        .then(item => {
          dispatch(actionsFunction.findBy_spravy_skupinaSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_spravy_skupinaSuccess: function(item) {
    return { type: types.FINDBY_SPRAVY_SKUPINA_SPRAVY_ARCHIV_SUCCESS, payload: item };
  },


  // Find by _spravy_uzivatelia
  findBy_spravy_uzivatelia: function(key) {
    return function(dispatch) {
      return Spravy_archivApi
        .findBy_spravy_uzivatelia(key)
        .then(item => {
          dispatch(actionsFunction.findBy_spravy_uzivateliaSuccess(item));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  findBy_spravy_uzivateliaSuccess: function(item) {
    return { type: types.FINDBY_SPRAVY_UZIVATELIA_SPRAVY_ARCHIV_SUCCESS, payload: item };
  },


  // Get spravy_archiv
  loadSpravy_archiv: function(id) {
    return function(dispatch) {
      return Spravy_archivApi
        .getOneSpravy_archiv(id)
        .then(spravy_archiv => {
          dispatch(actionsFunction.loadSpravy_archivSuccess(spravy_archiv));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadSpravy_archivSuccess: function(spravy_archiv) {
    return { type: types.GET_SPRAVY_ARCHIV_SUCCESS, payload: spravy_archiv };
  },

  // Load  list
  loadSpravy_archivList: function() {
    return function(dispatch) {
      return Spravy_archivApi
        .getSpravy_archivList()
        .then(list => {
          dispatch(actionsFunction.loadSpravy_archivListSuccess(list));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  loadSpravy_archivListSuccess: function(list) {
    return { type: types.LIST_SPRAVY_ARCHIV_SUCCESS, payload: list };
  },

	
  // Save spravy_archiv
  saveSpravy_archiv: function(spravy_archiv) {
    return function(dispatch) {
      return Spravy_archivApi
        .saveSpravy_archiv(spravy_archiv)
        .then(spravy_archiv => {
          dispatch(actionsFunction.saveSpravy_archivSuccess(spravy_archiv));
        })
        .catch(error => {
          throw error;
        });
    };
  },

  saveSpravy_archivSuccess: function(spravy_archiv) {
    return { type: types.UPDATE_SPRAVY_ARCHIV_SUCCESS, payload: spravy_archiv };
  },


};

export default actionsFunction;
